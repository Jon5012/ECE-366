module one_bit_tb;

    reg A, B, Cin;
    wire S, Cout;

    one_bit DUT (
        .S(S),
        .Cout(Cout),
        .A(A),
        .B(B),
        .Cin(Cin)
    );

    initial begin
        A = 0; B = 0; Cin = 0;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 0; B = 0; Cin = 1;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 0; B = 1; Cin = 0;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 0; B = 1; Cin = 1;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 1; B = 0; Cin = 0;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 1; B = 0; Cin = 1;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 1; B = 1; Cin = 0;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        A = 1; B = 1; Cin = 1;
        #10;
        $display("Input: A=%b, B=%b, Cin=%b | Output: S=%b, Cout=%b", A, B, Cin, S, Cout);

        $finish;
    end

endmodule
